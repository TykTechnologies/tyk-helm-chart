{{- if .Values.pump.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pump-{{ include "tyk-headless.fullname" . }}
  labels:
    app: pump-{{ include "tyk-headless.fullname" . }}
    chart: {{ include "tyk-headless.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.pump.replicaCount }}
  selector:
    matchLabels:
      app: pump-{{ include "tyk-headless.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: pump-{{ include "tyk-headless.fullname" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-pump.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- if .Values.pump.mounts }}
        {{- range $secret := .Values.pump.mounts }}
        "checksum/secret-{{ $secret.name }}": {{ include (print "mounts/%s" $secret.filename) . | sha256sum }}
        {{- end }}
        {{- end }}
    spec:
{{- if .Values.pump.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.pump.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.pump.tolerations }}
      tolerations:
{{ toYaml .Values.pump.tolerations | indent 8 }}
{{- end }}
{{- if .Values.pump.affinity }}
      affinity:
{{ toYaml .Values.pump.affinity | indent 8 }}
{{- end }}
      containers:
      - name: pump-{{ .Chart.Name }}
        image: "{{ .Values.pump.image.repository }}:{{ .Values.pump.image.tag }}"
        imagePullPolicy: {{ .Values.pump.image.pullPolicy }}
        workingDir: "/opt/tyk-pump"
        {{ if .Values.pump.prometheusPump.enabled }}
        ports:
          - name: web
            containerPort: {{ .Values.pump.prometheusPump.port }}
        {{ end }}
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - all
        env:
          # Legacy support for Redis Cluster driver. Driver dropped in v3.0.0.
          - name: REDIGOCLUSTER_SHARDCOUNT
            value: "128"
          {{- if eq "prometheus" (include "tyk-headless.pumpType" .) }}
          # Configure Prometheus Pump for Tyk Pump
          - name: TYK_PMP_PUMPS_PROMETHEUS_TYPE
            value: prometheus
          - name: TYK_PMP_PUMPS_PROMETHEUS_META_ADDR
            value: "{{ .Values.pump.prometheusPump.host }}:{{ .Values.pump.prometheusPump.port }}"
          - name: TYK_PMP_PUMPS_PROMETHEUS_META_PATH
            value: "{{ .Values.pump.prometheusPump.path }}"
            {{ if .Values.pump.prometheusPump.customMetrics }}
          - name: TYK_PMP_PUMPS_PROMETHEUS_META_CUSTOMMETRICS
            value: "{{ .Values.pump.prometheusPump.customMetrics }}"
            {{ end }}
          {{- else if eq "postgres" (include "tyk-headless.pumpType" .) }}
          # SQL Pump
          - name: TYK_PMP_PUMPS_SQL_TYPE
            value: "sql"
          - name: TYK_PMP_PUMPS_SQL_META_TYPE
            value: "postgres"
          - name: TYK_PMP_PUMPS_SQL_META_CONNECTIONSTRING
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.secrets.useSecretName }} {{ .Values.secrets.useSecretName }} {{ else }} secrets-{{ include "tyk-headless.fullname" . }} {{ end }}
                key: pgConnectionString
          # SQL Aggregate Pump
          - name: TYK_PMP_PUMPS_SQLAGGREGATE_TYPE
            value: "sql_aggregate"
          - name: TYK_PMP_PUMPS_SQLAGGREGATE_META_TYPE
            value: "postgres"
          - name: TYK_PMP_PUMPS_SQLAGGREGATE_META_CONNECTIONSTRING
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.secrets.useSecretName }} {{ .Values.secrets.useSecretName }} {{ else }} secrets-{{ include "tyk-headless.fullname" . }} {{ end }}
                key: pgConnectionString
                
          {{- else if eq "mongo" (include "tyk-headless.pumpType" .) }}
          # Mongo Pump
          - name: TYK_PMP_PUMPS_MONGO_META_COLLECTIONNAME
            value: "tyk_analytics_headless"
          - name: TYK_PMP_PUMPS_MONGO_META_MONGOUSESSL
            value: "{{ default "false" .Values.mongo.useSSL }}"
          - name: TYK_PMP_PUMPS_MONGO_META_MONGOURL
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.secrets.useSecretName }} {{ .Values.secrets.useSecretName }} {{ else }} secrets-{{ include "tyk-headless.fullname" . }} {{ end }}
                key: mongoURL
          # Mongo Aggregate Pump
          - name: TYK_PMP_PUMPS_MONGOAGGREGATE_TYPE
            value: "mongo-pump-aggregate"
          - name: TYK_PMP_PUMPS_MONGOAGGREGATE_META_MONGOUSESSL
            value:  "{{ default "false" .Values.mongo.useSSL }}"
          - name: TYK_PMP_PUMPS_MONGOAGGREGATE_META_MONGOURL
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.secrets.useSecretName }} {{ .Values.secrets.useSecretName }} {{ else }} secrets-{{ include "tyk-headless.fullname" . }} {{ end }}
                key: mongoURL
          - name: TYK_PMP_PUMPS_MONGOAGGREGATE_META_COLLECTIONNAME
            value: "tyk_analytics_headless"
          - name: TYK_PMP_PUMPS_MONGOAGGREGATE_META_USEMIXEDCOLLECTION
            value: "true"
          {{ end }}
          {{ if not .Values.pump.uptimePumpBackend }}
          - name: TYK_PMP_DONTPURGEUPTIMEDATA
            value: "true"
          {{ else }}
          {{ if eq "postgres" .Values.pump.uptimePumpBackend }}
          # SQL Uptime Pump
          - name: TYK_PMP_UPTIMEPUMPCONFIG_UPTIMETYPE
            value: "sql"
          - name: TYK_PMP_UPTIMEPUMPCONFIG_TYPE
            value: "postgres"
          - name: TYK_PMP_UPTIMEPUMPCONFIG_CONNECTIONSTRING
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.secrets.useSecretName }} {{ .Values.secrets.useSecretName }} {{ else }} secrets-{{ include "tyk-headless.fullname" . }} {{ end }}
                key: pgConnectionString
          {{ else if eq "mongo" .Values.pump.uptimePumpBackend }}
          # Mongo Uptime Pump
          - name: TYK_PMP_UPTIMEPUMPCONFIG_MONGOURL
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.secrets.useSecretName }} {{ .Values.secrets.useSecretName }} {{ else }} secrets-{{ include "tyk-headless.fullname" . }} {{ end }}
                key: mongoURL
            {{ end }}
          {{ end }}

          - name: TYK_PMP_ANALYTICSSTORAGECONFIG_ADDRS
            {{- if and .Values.redis.host .Values.redis.port }}
            value: "{{ .Values.redis.host }}:{{ .Values.redis.port }}"
            {{- else }}
            value: "{{ join "," .Values.redis.addrs }}"
            {{- end }}
          {{ if .Values.redis.enableSentinel }}
          - name: TYK_PMP_ANALYTICSSTORAGECONFIG_SENTINELPASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.secrets.useSecretName }} {{ .Values.secrets.useSecretName }} {{ else }} secrets-{{ include "tyk-headless.fullname" . }} {{ end }}
                key: redisSentinelPass
          - name: TYK_PMP_ANALYTICSSTORAGECONFIG_MASTERNAME
            value: "{{- .Values.redis.masterName -}}"
          {{ else if .Values.redis.enableCluster }}
          - name: TYK_PMP_ANALYTICSSTORAGECONFIG_ENABLECLUSTER
            value: "true"
          {{ else }}
          - name: TYK_PMP_ANALYTICSSTORAGECONFIG_MASTERNAME
            value: ""
          - name: TYK_PMP_ANALYTICSSTORAGECONFIG_ENABLECLUSTER
            value: "false"
          {{ end }}
          - name: TYK_PMP_ANALYTICSSTORAGECONFIG_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.secrets.useSecretName }} {{ .Values.secrets.useSecretName }} {{ else }} secrets-{{ include "tyk-headless.fullname" . }} {{ end}}
                key: redisPass
          - name: TYK_PMP_ANALYTICSSTORAGECONFIG_REDISUSESSL
            value: "{{ default "false" .Values.redis.useSSL }}"
        {{- if .Values.pump.extraEnvs }}
        {{- range $env := .Values.pump.extraEnvs }}
          - name: {{ $env.name }}
            value: {{ $env.value | quote }}
        {{- end }}
        {{- end }}
        command: ["/opt/tyk-pump/tyk-pump", "-c", "/etc/tyk-pump/pump.conf"]
        volumeMounts:
          - name: tyk-pump-conf
            mountPath: /etc/tyk-pump
          {{- if .Values.pump.mounts }}
          {{- range $secret := .Values.pump.mounts }}
          - name: {{ $.Release.Name }}-pump-secret-{{ $secret.name }}
            mountPath: {{ $secret.mountPath }}
          {{- end }}
          {{- end }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
      {{- if .Values.pump.securityContext }}
      securityContext:
      {{- toYaml .Values.pump.securityContext | nindent 10 }}
      {{- end }}
      volumes:
        - name: tyk-pump-conf
          configMap:
            name: pump-conf-{{ include "tyk-headless.fullname" . }}
            items:
              - key: pump.conf
                path: pump.conf
        {{- if .Values.pump.mounts }}
        {{- range $secret := .Values.pump.mounts }}
        - name: {{ $.Release.Name }}-pump-secret-{{ $secret.name }}
          secret:
            secretName: {{ $.Release.Name }}-pump-secret-{{ $secret.name }}
        {{- end }}
        {{- end }}
{{- end }}
