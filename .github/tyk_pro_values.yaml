# Default values for tyk-pro chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

# Used to shard the gateways. If you enable it make sure you have at least one gateway that is not sharded and also tag the APIs accordingly
enableSharding: false

# Set to true to use Tyk as the Ingress gateway to an Istio Service Mesh
# We apply some exceptions to the Istio IPTables so inbound calls to the
# Gateway and Dashboard are exposed to the outside world - see the deployment templates for implementation
enableIstioIngress: false

# Master switch for enabling/disabling bootstraing job batch, role binding, role, and account service.
bootstrap: true

secrets:
  APISecret: CHANGEME
  AdminSecret: "12345"
  # If you don't want to store plaintext secrets in the Helm value file and would rather provide the k8s Secret externally please populate the value below
  useSecretName: ""

redis:
  shardCount: 128
  # addrs:
  #   - redis.tyk.svc.cluster.local:6379
  useSSL: false
#    #If you're using Bitnami Redis chart please input the correct host to your installation in the field below
#    addrs:
#      - tyk-redis-master.tyk.svc.cluster.local:6379
#   #If you're using Bitnami Redis chart please input your password in the field below
#    pass: ""
#   #If you are using Redis cluster, enable it here.
#    enableCluster: false
#   #By default the database index is 0. Setting the database index is not supported with redis cluster. As such, if you have enableCluster: true, then this value should be omitted or explicitly set to 0.
  storage:
    database: 0

mongo:
  # mongoURL: mongodb://mongo.tyk.svc.cluster.local:27017/tyk_analytics
  # If you're using Bitnami MongoDB chart please input your password below
  # mongoURL: mongodb://root:pass@tyk-mongo-mongodb.tyk.svc.cluster.local:27017/tyk-dashboard?authSource=admin
  useSSL: false

mdcb:
  enabled: true
  useSSL: false
  replicaCount: 1
  containerPort: 9090
  healthcheckport: 8181
  license: ""
  forwardAnalyticsToPump: true
  image:
    repository: tykio/tyk-mdcb-docker    # requires credential
    tag: v1.8.0
    pullPolicy: Always
  service:
    type: LoadBalancer
    port: 9090
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  extraEnvs: []

tib:
  enabled: false
  useSSL: true
  replicaCount: 1
  containerPort: 3010
  image:
    repository: tykio/tyk-identity-broker
    tag: v1.1.1
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 3010
  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: true
    path: /
    hosts:
      - tib.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  extraEnvs: []
  configMap:
    # Create a configMap to store profiles json
    profiles: tyk-tib-profiles-conf

dash:
  enabled: true
  # Dashboard will only bootstrap if the master bootstrap option is set to true
  bootstrap: true
  replicaCount: 1
  hostName: tyk-dashboard.local
  tls: false
  license: ""
  containerPort: 3000
  image:
    repository: tykio/tyk-dashboard
    tag: v3.2.1
    pullPolicy: Always
  service:
    type: NodePort
    port: 3000
  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - tyk-dashboard.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  extraEnvs: []
  # Set these values for dashboard admin user
  adminUser:
    firstName: admin
    lastName: user
    email: default@exmaple.com
    # Set a password or a random one will be assigned
    password: ""
  org:
    name: Default Org
    # Set this value to the domain of your developer portal
    cname: tyk-portal.local

portal:
  # Portal will only bootstrap if both the Master and Dashboard bootstrap options are set to true
  # Only set this to false if you're not planning on using developer portal
  bootstrap: true
  path: /
  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - tyk-portal.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

gateway:
  enabled: true
  kind: DaemonSet
  replicaCount: 2
  hostName: tyk-gw.local
  # if enableSharding set to true then you must define a tag to load APIs to these gateways i.e. "ingress"
  tags: ""
  tls: false
  containerPort: 8080
  image:
    repository: tykio/tyk-gateway
    tag: v3.2.1
    pullPolicy: Always
  service:
    type: NodePort
    port: 8080
    externalTrafficPolicy: Local
    annotations: {}
  control:
    enabled: true
    containerPort: 9696
    port: 9696
    type: ClusterIP
    annotations: {}
  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - tyk-gw.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  nodeSelector: {}
  tolerations:
    - key: node-role.kubernetes.io/master
      effect: NoSchedule
  affinity: {}
  extraEnvs: []

pump:
  enabled: true
  replicaCount: 1
  image:
    repository: tykio/tyk-pump-docker-pub
    tag: v1.4.0
    pullPolicy: Always
  annotations: {}
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  extraEnvs: []

rbac: true
