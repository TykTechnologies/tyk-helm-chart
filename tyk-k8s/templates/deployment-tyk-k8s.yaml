apiVersion: apps/v1
kind: Deployment
metadata:
  name: tyk-k8s
  labels:
    app: tyk-k8s
    chart: {{ include "tyk-k8s.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.tyk_k8s.replicaCount }}
  minReadySeconds: 5
  strategy:
    # indicate which strategy we want for rolling update
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: tyk-k8s
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: tyk-k8s
        release: {{ .Release.Name }}
    spec:
      {{ if .Values.rbac }}serviceAccountName: tyk-k8s {{ end }}
{{- if .Values.tyk_k8s.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.tyk_k8s.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.tyk_k8s.tolerations }}
      tolerations:
{{ toYaml .Values.tyk_k8s.tolerations | indent 8 }}
{{- end }}
{{- if .Values.tyk_k8s.affinity }}
      affinity:
{{ toYaml .Values.tyk_k8s.affinity | indent 8 }}
{{- end }}
      containers:
      - name: tyk-k8s
        image: "{{ .Values.tyk_k8s.image.repository }}:{{ .Values.tyk_k8s.image.tag }}"
        imagePullPolicy: {{ .Values.tyk_k8s.image.pullPolicy }}
        workingDir: "/opt/tyk-k8s"
        command: ["/opt/tyk-k8s/tyk-k8s", "start"]
        {{- if not .Values.hybrid }}
        env:
          - name: TK8S_TYK_SECRET
            valueFrom:
              secretKeyRef:
                name: tyk-k8s-controller
                key: secret
          - name: TK8S_TYK_ORG
            valueFrom:
              secretKeyRef:
                name: tyk-k8s-controller
                key: org
        {{- end }}
        ports:
        - containerPort: 443
        volumeMounts:
          - name: tyk-k8s-conf
            mountPath: /etc/tyk-k8s
          {{- if .Values.tyk_k8s.serviceMesh.enabled }}
          - name: webhook-certs
            mountPath: /etc/tyk-k8s/certs
          {{- end }}
        resources:
{{ toYaml .Values.tyk_k8s.resources | indent 12 }}
      volumes:
        - name: tyk-k8s-conf
          configMap:
            name: tyk-k8s-conf
            items:
              - key: tyk_k8s.yaml
                path: tyk-k8s.yaml
        {{- if .Values.tyk_k8s.serviceMesh.enabled }}
        - name: webhook-certs
          secret:
            secretName: sidecar-injector-webhook-certs
        {{- end }}

