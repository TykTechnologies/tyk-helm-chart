{{- if .Values.enterprisePortal.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enterprise-portal-{{ include "tyk-pro.fullname" . }}
  labels:
    app: enterprise-portal-{{ include "tyk-pro.fullname" . }}
    chart: {{ include "tyk-pro.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.enterprisePortal.replicaCount }}
  minReadySeconds: 5
  strategy:
    # indicate which strategy we want for rolling update
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: enterprise-portal-{{ include "tyk-pro.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: enterprise-portal-{{ include "tyk-pro.fullname" . }}
        release: {{ .Release.Name }}
    spec:
{{- if .Values.enterprisePortal.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.enterprisePortal.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.enterprisePortal.tolerations }}
      tolerations:
{{ toYaml .Values.enterprisePortal.tolerations | indent 8 }}
{{- end }}
{{- if .Values.enterprisePortal.affinity }}
      affinity:
{{ toYaml .Values.enterprisePortal.affinity | indent 8 }}
{{- end }}
      containers:
      - image: "{{ .Values.enterprisePortal.image.repository }}:{{ .Values.enterprisePortal.image.tag }}"
        imagePullPolicy: {{ .Values.enterprisePortal.image.pullPolicy }}
        name: enterprise-portal-{{ .Chart.Name }}
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - all
        env:
          - name: PORTAL_LICENSEKEY
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.secrets.useSecretName }} {{ .Values.secrets.useSecretName }} {{ else }} secrets-{{ include "tyk-pro.fullname" . }} {{ end }}
                key: EnterprisePortalLicense
          - name: PORTAL_HOST_PORT
            value: "{{ .Values.enterprisePortal.containerPort }}"
          - name: ADMIN_EMAIL
            value: "{{ .Values.enterprisePortal.adminUser.email }}"
          - name: ADMIN_PASSWORD
            value: "{{ .Values.enterprisePortal.adminUser.password }}"
          - name: PORTAL_DATABASE_DIALECT
            value: "{{ .Values.enterprisePortal.storage.type }}"
          - name: PORTAL_THEMING_THEME
            value: "default"
          - name: PORTAL_THEMING_PATH
            value: "./themes"
          - name: PROVIDER_NAME
            value: "tyk"
          - name: PROVIDER_DATA
            value: "{\"URL\":\"{{ .Values.enterprisePortal.provider.url }}\",\"Secret\":\"{{ .Values.enterprisePortal.provider.apiKey }}\",\"OrgID\":\"{{ .Values.enterprisePortal.provider.orgId }}\"}"
          {{- if .Values.enterprisePortal.extraEnvs }}
          {{- toYaml .Values.enterprisePortal.extraEnvs| nindent 10 }}
          {{- end }}
        resources:
{{ toYaml .Values.enterprisePortal.resources | indent 12 }}
        command: ["/opt/portal/dev-portal"]
        args: ["--bootstrap", "--provider-data=$(PROVIDER_DATA)", "-user=$(ADMIN_EMAIL)", "-pass=$(ADMIN_PASSWORD)"]
        workingDir: /opt/portal
        ports:
        - containerPort: {{ .Values.enterprisePortal.containerPort }}
        volumeMounts:
          {{- if .Values.enterprisePortal.mounts }}
          {{- range $secret := .Values.enterprisePortal.mounts }}
          - name: {{ $.Release.Name }}-enterprise-portal-secret-{{ $secret.name }}
            mountPath: {{ $secret.mountPath }}
          {{- end }}
          {{- end }}
        livenessProbe:
          httpGet:
            scheme: "HTTP{{ if .Values.enterprisePortal.tls }}S{{ end }}"
            path: /
            port: {{ .Values.enterprisePortal.containerPort }}
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 3
          failureThreshold: 2
        readinessProbe:
          httpGet:
            scheme: "HTTP{{ if .Values.enterprisePortal.tls }}S{{ end }}"
            path: /
            port: {{ .Values.enterprisePortal.containerPort }}
          initialDelaySeconds: 1
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
      securityContext:
        runAsUser: 1000
        fsGroup: 2000
      volumes:
        {{- if .Values.enterprisePortal.mounts }}
        {{- range $secret := .Values.enterprisePortal.mounts }}
        - name: {{ $.Release.Name }}-enterprise-portal-secret-{{ $secret.name }}
          secret:
            secretName: {{ $.Release.Name }}-enterprise-portal-secret-{{ $secret.name }}
        {{- end }}
        {{- end }}
{{- end }}
