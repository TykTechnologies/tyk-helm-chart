{{- if .Values.tib.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tib-{{ include "tyk-pro.fullname" . }}
  labels:
    app: tib-{{ include "tyk-pro.fullname" . }}
    chart: {{ include "tyk-pro.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.tib.replicaCount }}
  minReadySeconds: 10
  strategy:
    # indicate which strategy we want for rolling update
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: tib-{{ include "tyk-pro.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: tib-{{ include "tyk-pro.fullname" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-tib.yaml") . | sha256sum }}
    spec:
{{- if .Values.tib.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.tib.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.tib.tolerations }}
      tolerations:
{{ toYaml .Values.tib.tolerations | indent 8 }}
{{- end }}
{{- if .Values.tib.affinity }}
      affinity:
{{ toYaml .Values.tib.affinity | indent 8 }}
{{- end }}
      containers:
      - image: "{{ .Values.tib.image.repository }}:{{ .Values.tib.image.tag }}"
        imagePullPolicy: {{ .Values.tib.image.pullPolicy }}
        name: tib-{{ .Chart.Name }}
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - all
        env:
          - name: TYK_IB_PORT
            value: "{{ .Values.tib.containerPort }}"
          - name: TYK_IB_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.secrets.useSecretName }} {{ .Values.secrets.useSecretName }} {{ else }} secrets-{{ include "tyk-pro.fullname" . }} {{ end}}
                key: tibSecret
          - name: TYK_IB_HTTPSERVEROPTIONS_USESSL
          # Enable backward compatibility to chart 0.8.1.
            value: "{{ or .Values.tib.tls .Values.tib.useSSL }}"
          - name: TYK_IB_TYKAPISETTINGS_DASHBOARDCONFIG_ADMINSECRET
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.secrets.useSecretName }} {{ .Values.secrets.useSecretName }} {{ else }} secrets-{{ include "tyk-pro.fullname" . }} {{ end}}
                key: AdminSecret
          - name: TYK_IB_TYKAPISETTINGS_GATEWAYCONFIG_ENDPOINT
            value: "{{ include "tyk-pro.gwproto" . }}://gateway-svc-{{ include "tyk-pro.fullname" . }}.{{ .Release.Namespace }}"
          - name: TYK_IB_TYKAPISETTINGS_GATEWAYCONFIG_PORT
            value: "{{ .Values.gateway.service.port }}"
          - name: TYK_IB_TYKAPISETTINGS_GATEWAYCONFIG_ADMINSECRET
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.secrets.useSecretName }} {{ .Values.secrets.useSecretName }} {{ else }} secrets-{{ include "tyk-pro.fullname" . }} {{ end}}
                key: AdminSecret
          - name: TYK_IB_TYKAPISETTINGS_DASHBOARDCONFIG_ENDPOINT
            value: "{{ include "tyk-pro.dash_proto" . }}://dashboard-svc-{{ include "tyk-pro.fullname" . }}.{{ .Release.Namespace }}"
          - name: TYK_IB_TYKAPISETTINGS_DASHBOARDCONFIG_PORT
            value: "{{ .Values.dash.service.port }}"
          {{- if .Values.tib.extraEnvs }}
          {{- toYaml .Values.tib.extraEnvs| nindent 10 }}
          {{- end }}
        resources:
{{ toYaml .Values.tib.resources | indent 10 }}
        ports:
        - containerPort: {{ .Values.tib.containerPort }}
        volumeMounts:
          - name: tyk-tib-conf-volume
            mountPath: /opt/tyk-identity-broker/tib.conf
            subPath: tib.conf
            readOnly: true
          - name: tyk-tib-profiles-conf-volume
            mountPath: /opt/tyk-identity-broker/profiles.json
            subPath: profiles.json
            readOnly: true
          {{- if .Values.tib.mounts }}
          {{- range $secret := .Values.tib.mounts }}
          - name: {{ $.Release.Name }}-tib-secret-{{ $secret.name }}
            mountPath: {{ $secret.mountPath }}
          {{- end }}
          {{- end }}
        livenessProbe:
          httpGet:
            scheme: "HTTP"
            path: /health
            port: {{ .Values.tib.containerPort }}
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 3
          failureThreshold: 2
        readinessProbe:
          httpGet:
            scheme: "HTTP"
            path: /health
            port: {{ .Values.tib.containerPort }}
          initialDelaySeconds: 1
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
      securityContext:
        runAsUser: 1000
        fsGroup: 2000
      volumes:
        - name: tyk-tib-conf-volume
          configMap:
            name: tyk-tib-conf
        - name: tyk-tib-profiles-conf-volume
          configMap:
            name: {{ .Values.tib.configMap.profiles }}
        {{- if .Values.tib.mounts }}
        {{- range $secret := .Values.tib.mounts }}
        - name: {{ $.Release.Name }}-tib-secret-{{ $secret.name }}
          secret:
            secretName: {{ $.Release.Name }}-tib-secret-{{ $secret.name }}
        {{- end }}
        {{- end }}
{{- end }}
