# Default values for tyk-gateway.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

secrets:
  # tyk.conf node_secret
  # tyk.conf secret
  APISecret: CHANGEME
  # If you don't want to store plaintext secrets in the Helm value file and would
  # rather provide the k8s Secret externally please populate the value below
  useSecretName: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

# The hostname to bind the Gateway to.
hostName: tyk-gw.local

# When true, sets the gateway protocol to HTTPS.
tls: false

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  privileged: false

replicaCount: 1
containerPort: 8080
image:
  repository: tykio/tyk-gateway
  tag: v3.2.1
  pullPolicy: Always
service:
  type: NodePort
  port: 8080
  externalTrafficPolicy: Local
  annotations: {}
control:
  enabled: false
  containerPort: 9696
  port: 9696
  type: ClusterIP
  annotations: {}

 # Creates an ingress object in k8s. Will require an ingress-controller and
 # annotation to that ingress controller.
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: tyk-gw.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}
tolerations:
  - key: node-role.kubernetes.io/master
    effect: NoSchedule
affinity: {}
extraEnvs: []
mounts: []
